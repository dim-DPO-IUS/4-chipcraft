#include "SimpleI2C.h"

// ==================== Инициализация I2C ====================
void I2C_Init(void)
{
    // Инициализация I2C шины
    // Подключение Arduino к I2C шине как Master (ведущий)
    // Результат: Arduino готов отправлять и принимать данные по линиям SDA/A4 и SCL/A5
    Wire.begin();
}

// ==================== Чтение нескольких байтов ====================
void I2C_ReadBytes(uint8_t deviceAddr, uint8_t regAddr, uint8_t *buffer, uint8_t length)
{
    // Начало передачи к MPU-6050
    Wire.beginTransmission(deviceAddr);
    // Указание начального регистра для чтения
    // 0x3B: Адрес первого регистра данных акселерометра (ACCEL_XOUT_H)
    Wire.write(regAddr);
    // Завершение передачи БЕЗ освобождения шины
    // Параметр false: Отправляет RESTART сигнал вместо STOP
    // Соединение с MPU-6050 сохраняется
    // Можно сразу переходить к чтению данных
    Wire.endTransmission(false);
    // Запрос данных от устройства MPU (0x68)
    // 14: Количество байт для чтения (7 измерений × 2 байта)
    // true: Отправить STOP сигнал после чтения
    Wire.requestFrom(deviceAddr, length);

    for (uint8_t i = 0; i < length; i++) {
        buffer[i] = Wire.read();
    }
}

// ==================== Запись байта ====================
void I2C_WriteByte(uint8_t deviceAddr, uint8_t regAddr, uint8_t data)
{
    // Начало передачи к конкретному устройству с адресом MPU (0x68)
    // MPU: 0x68 - I2C адрес MPU-6050
    // Результат: Шина готова к отправке команд именно на MPU-6050
    Wire.beginTransmission(deviceAddr);
    // Указание регистра для записи
    // 0x6B: Адрес регистра управления питанием (Power Management 1)
    // По умолчанию после включения MPU-6050 находится в sleep режиме
    // Этот код Сбрасывает бит SLEEP (6-й бит) установкой значения 0
    Wire.write(regAddr);
    // Запись данных в указанный выше регистр
    // Записывает значение 0 в регистр PWR_MGMT_1
    // Результат: MPU-6050 выходит из спящего режима и начинает работать
    Wire.write(data);
    // Завершение передачи
    // Завершает передачу и освобождает шину
    // Результат: Команда выполнена, MPU-6050 активен
    Wire.endTransmission();
}