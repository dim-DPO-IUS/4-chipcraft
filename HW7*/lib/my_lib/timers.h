#ifndef TIMERS_H
#define TIMERS_H

#include "display.h"       // Для функций работы с дисплеем
#include "sensor.h"        // Для функций работы с датчиком
#include <avr/interrupt.h> // Библиотека для работы с прерываниями AVR
#include <avr/io.h>        // Библиотека для работы с регистрами ввода-вывода AVR

// === НАСТРАИВАЕМЫЕ ПАРАМЕТРЫ ТАЙМЕРОВ ===

// Timer1 - 16-битный таймер для обновления дисплея (1000ms интервал)
//===================================================================
// Установка предделителя 256 для Timer1
// CS12 - бит предделителя в регистре TCCR1B
// Предделитель замедляет тактовую частоту таймера
#define TIMER1_PRESCALER (1 << CS12)

// Значение для регистра сравнения OCR1A
// Рассчитано для 1000ms при частоте 16MHz:
//      16000000Hz / 256(предделитель) = 62500Hz
//      62500Hz / 2 = 31250 (для 500ms)
//      31250 * 2 - 1 = 62499 (для 1000ms)
#define TIMER1_OCR_VALUE 62499

// Установка режима CTC (Clear Timer on Compare)
// WGM12 - бит режима работы в регистре TCCR1B
// В режиме CTC таймер сбрасывается при достижении OCR1A
#define TIMER1_MODE (1 << WGM12)

// Разрешение прерывания по сравнению A
// OCIE1A - бит разрешения прерывания в регистре TIMSK1
// Прерывание возникает когда TCNT1 == OCR1A
#define TIMER1_INTERRUPT (1 << OCIE1A)

// Timer2 - 8-битный таймер для опроса датчика 
//===================================================================
// Предделитель 1024 для Timer2
// CS22, CS21, CS20 - биты предделителя в TCCR2B
// 1024 - максимальный предделитель для 8-битного таймера
#define TIMER2_PRESCALER (1 << CS22) | (1 << CS21) | (1 << CS20)

// Значение для регистра сравнения OCR2A
// Рассчитано для ~10ms при 16MHz:
//      16000000Hz / 1024(предделитель) = 15625Hz
//      15625Hz / 100 = 156.25 (для 10ms)
#define TIMER2_OCR_VALUE 155

// Установка режима CTC для Timer2
// WGM21 - бит режима работы в регистре TCCR2A
#define TIMER2_MODE (1 << WGM21)

// Разрешение прерывания по сравнению A для Timer2
// OCIE2A - бит разрешения прерывания в регистре TIMSK2
#define TIMER2_INTERRUPT (1 << OCIE2A)

// =======================================
// Объявление функции инициализации таймеров
// Эта функция будет настроить оба таймера с указанными выше параметрами
void timers_init(void);

#endif